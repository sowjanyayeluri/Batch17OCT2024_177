ERROR
double free detected in tcache 2 when free more than once
IMPORTANT **STRINGS**
collection charecter is not same as string
strings end with null(\0) character we can avoid size but if we are nore defining we need to give size
strcpy cannot copry the null character MEMSET, MEMCPY, STRSTR(to find first occurence of subsring in main string return base address or null), STRCHR, strtok, strlen, strerror, strsep
in line function
REVERSE A GIVEN STRING
REVERSE GIVEN INTERVALS OF STRING
user defined daa types:
1. strutures struct
2. unions union
3. enums enum
ex:
structures syntax:
struct tagName
{
	members of structure
};

struct Square
{
	int len;
	int breath;
};
we can use them as
struct Square s1,s2;
we can typedefine to give struct Square shortcut name as
typedef struct Square SQR;
or
typedef struct Square
{
	int len;
	int breath;
}SQR1;
we can create array of structures as sq[10];
member of structure can be access by using . => static variable = nameVar.memberName like s1.len
							  -> =>ptr variable = nameVar->memberName like ptr->len
in structures we cannot declare the functions.

PROGRAMS

1
#include <stdio.h>
#include <string.h>
int main()
{
    char s1[400],s2[40];
    char *ptr=NULL;
    printf("\nEnthe the line with delimiter:\n");
    scanf("%[^\n]s",s1);
    printf("%s",s1);
    ptr = strtok(s1,",");
    printf("\nptr=%s",ptr);
    printf("\n\n");
    return 0;
}

2
#include <stdio.h>
#include <string.h>
#define SIZE 20
void reverseString(char []);
int main()
{
    char input[SIZE];
    scanf("%s",input);
    reverseString(input);
    printf("Reversed string: %s",input);
   return 0;
}
void reverseString(char string[])
{
    int length=strlen(string);
    int i=0;
    int mid=0;
    if(length%2==0)
        mid=length/2;
    else
        mid=(length/2)+1;
    while(i<mid)
    {
        char temp=string[length-i-1]; 
        string[length-i-1]=string[i];
        string[i]=temp;
        i++;
    }
}


